
name: Kernel Build 4.14 - v2
on:
  workflow_dispatch:
    inputs:
      KERNEL_REPO:
        description: 'KERNEL_REPO'
        required: true
        default: 'https://github.com/NCLnclNCL/android_kernel_xiaomi_rosemary'
      KERNEL_BRANCH:
        description: 'KERNEL_BRANCH'
        required: true
        default: 'rosemary-13'
      KERNEL_DEFCONFIG:
        description: 'KERNEL_DEFCONFIG'
        required: true
        default: 'rosemary_defconfig'
      KERNEL_HOTFIX:
        description: 'KERNEL_HOTFIX'
        required: false
        default: 'N/A'

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:

    - name: Prepare Env
      run: |
        
        
        git config --global user.name "bot"
        git config --global user.email "bot@email.com"
        mkdir -p $GITHUB_WORKSPACE/project
    - name: Install depen

      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
          packages: build-essential bc bison flex libssl-dev libncurses-dev libelf-dev git curl unzip gcc g++ ccache make python3
          execute_install_scripts: false
    - name: Cache kernel
      id: cache_kernel
      uses: actions/cache@v4
      with:
        path: |
          ${{ github.workspace }}/project/linux
          ${{ github.workspace }}/project/AnyKernel3
        key: kernel-${{ runner.os }}-xiaomi-4.14.332-${{ github.event.inputs.KERNEL_BRANCH }}-${{ github.event.inputs.KERNEL_REPO }}
        
    - name: Cache Toolchain
      id: cache
      uses: actions/cache@v4
      with:
        path: |
          ${{ github.workspace }}/project/clang
          
        key: toolchain-${{ runner.os }}-clang
    - name: Set up ccache
      run: |
          mkdir -p ~/.cache
          ccache --version
          echo "CCACHE_DIR=$HOME/.ccache" >> $GITHUB_ENV
    - name: Cache ccache
      uses: actions/cache@v4
      with:
          path: ~/.ccache
          key: ${{ runner.os }}-clang-ccache-xiaomi
          restore-keys: |
            ${{ runner.os }}-clang-ccache-xiaomi
           
    - name: Prepare TC
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        mkdir -p $GITHUB_WORKSPACE/project/clang
        CLANG_URL=$(curl -Ls https://raw.githubusercontent.com/ZyCromerZ/Clang/main/Clang-main-link.txt)
        aria2c $CLANG_URL &> /dev/null
        tar -C $GITHUB_WORKSPACE/project/clang/ -zxf ${CLANG_URL##*/}

    - name: Prepare Kernel
      if: steps.cache_kernel.outputs.cache-hit != 'true'
      run: |
        cd $GITHUB_WORKSPACE/project
        git clone -b ${{ github.event.inputs.KERNEL_BRANCH }} ${{ github.event.inputs.KERNEL_REPO }} linux --depth=1 &> /dev/null
        git clone -b master https://github.com/zainarbani/AnyKernel3 AnyKernel3 --depth=1 &> /dev/null
    - name: Add ksu + susfs
      run: | 
       cd $GITHUB_WORKSPACE/project/linux
       curl -LSs "https://raw.githubusercontent.com/NCLnclNCL/KernelSU/susfs-main/kernel/setup.sh" | bash -s susfs-main
    - name: Building Kernel
      run: |
        cd $GITHUB_WORKSPACE/project/linux
        git pull
        PATH=$GITHUB_WORKSPACE/project/clang/bin:$PATH
        export TZ="Asia/Jakarta"
        export DATE=$(date "+%Y%m%d-%H%M%S")
        echo "BUILD_DATE=$(date "+%Y%m%d%H%M%S")" >> $GITHUB_ENV
        echo "CLANG_VER=$(clang --version | head -n 1 | perl -pe 's/\(http.*?\)//gs' | sed -e 's/  */ /g')" >> $GITHUB_ENV
        export ARCH=arm64
        export KBUILD_COMPILER_STRING="$(clang --version | head -n 1 | perl -pe 's/\(http.*?\)//gs' | sed -e 's/  */ /g' -e 's/[[:space:]]*$//')"
        make clean
        make O=out ARCH=$ARCH ${{ github.event.inputs.KERNEL_DEFCONFIG }}
        make -j$(nproc --all) O=out ARCH=arm64 CROSS_COMPILE=aarch64-linux-android- CROSS_COMPILE_ARM32=arm-linux-androideabi- CLANG_TRIPLE=aarch64-linux-gnu- CC="ccache clang" LD=ld.lld AR=llvm-ar NM=llvm-nm OBJCOPY=llvm-objcopy OBJDUMP=llvm-objdump STRIP=llvm-strip HOSTCC=clang HOSTCXX=clang++ HOSTAR=llvm-ar HOSTLD=ld.lld LLVM=1 LLVM_IAS=1
        cp out/arch/arm64/boot/Image.gz-dtb $GITHUB_WORKSPACE/project/Image.gz-dtb-ksu

    - name: Prepare AK3
      run: |
        cd $GITHUB_WORKSPACE/project/AnyKernel3
      
        cp $GITHUB_WORKSPACE/project/Image.gz-dtb-ksu Image.gz-dtb
        zip -r9 $GITHUB_WORKSPACE/project/kernel-xiaomi-4.14.zip -- *
        
    - name: Upload Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
        
          ${{ github.workspace }}/project/kernel-xiaomi-4.14.zip
        name: Kernel 4.14.332-${{ env.BUILD_DATE }}
        tag_name: ${{ env.BUILD_DATE }}
        body: |
          Repo: ${{ github.event.inputs.KERNEL_REPO }}
          Branch: ${{ github.event.inputs.KERNEL_BRANCH }}
          Config: ${{ github.event.inputs.KERNEL_DEFCONFIG }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
