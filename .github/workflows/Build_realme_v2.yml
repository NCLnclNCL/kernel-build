
name: Kernel Build realme c12 4.9 v2
on:
  workflow_dispatch:
    inputs:
      KERNEL_REPO:
        description: 'KERNEL_REPO'
        required: true
        default: 'https://github.com/NCLnclNCL/realmeC11_realmeC12_realmeC15_AndroidQ-kernel-source'
      KERNEL_BRANCH:
        description: 'KERNEL_BRANCH'
        required: true
        default: 'master'
      KERNEL_DEFCONFIG:
        description: 'KERNEL_DEFCONFIG'
        required: true
        default: 'oppo6765_defconfig'
      KERNEL_HOTFIX:
        description: 'KERNEL_HOTFIX'
        required: false
        default: 'N/A'

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:

    - name: Prepare Env
      run: |
        
        git config --global user.name "bot"
        git config --global user.email "bot@email.com"
        mkdir -p $GITHUB_WORKSPACE/project
    - name: Install depen
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
          packages: build-essential bc bison flex libssl-dev libncurses-dev libelf-dev git curl unzip gcc g++ ccache make python3
          execute_install_scripts: false
    - name: Cache Toolchain
      id: cache
      uses: actions/cache@v4
      with:
        path: |
          ${{ github.workspace }}/project/clang
          ${{ github.workspace }}/project/python2
          ${{ github.workspace }}/project/gcc
        key: toolchain-${{ runner.os }}-v1
    - name: Setup ccache
      if: inputs.ccache == 'true'
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: cache-${{ runner.os }}-v1
        max-size: 4G
        create-symlink: true
        
    - name: Install python2
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        cd $GITHUB_WORKSPACE/project
        wget https://github.com/NCLnclNCL/kernel-build/releases/download/python2.7.18/python2.7.18.zip
        ls
        7z x python2.7.18.zip   
        cd python2
        ls
    - name: Setup python2 symlink
      run: |
        sudo update-alternatives --install /usr/bin/python python $GITHUB_WORKSPACE/project/python2/bin/python2.7 1
        sudo ln -sf "$GITHUB_WORKSPACE/project/python2/bin/python2.7" /usr/bin/python2
    - name: Prepare TC
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
       mkdir -p $GITHUB_WORKSPACE/project/clang/
       cd $GITHUB_WORKSPACE/project/
       git clone https://github.com/kclinx/android_prebuilts_clang_host_linux-x86_clang-r353983c clang --depth=1 &> /dev/null
       
    - name: Gcc 4.9
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        mkdir -p $GITHUB_WORKSPACE/project/gcc
        CLANG_URL=https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9/+archive/refs/heads/android10-release.tar.gz
        aria2c $CLANG_URL &> /dev/null
        tar -C $GITHUB_WORKSPACE/project/gcc/ -zxf ${CLANG_URL##*/}
        
    - name: Prepare Kernel
      run: |
        cd $GITHUB_WORKSPACE/project
        git clone -b ${{ github.event.inputs.KERNEL_BRANCH }} ${{ github.event.inputs.KERNEL_REPO }} linux --depth=1 &> /dev/null
        git clone -b Old https://github.com/NCLnclNCL/AnyKernel3 AnyKernel3 --depth=1 &> /dev/null
    - name: Add ksu + susfs
      run: | 
       cd $GITHUB_WORKSPACE/project/linux
       curl -LSs "https://raw.githubusercontent.com/NCLnclNCL/KernelSU/susfs-main/kernel/setup.sh" | bash -s susfs-main
    - name: Building Kernel
      run: |
        cd $GITHUB_WORKSPACE/project/linux
        export PATH=$GITHUB_WORKSPACE/project/clang/bin:$GITHUB_WORKSPACE/project/gcc/bin:$PATH:
        echo "BUILD_DATE=$(date "+%Y%m%d%H%M%S")" >> $GITHUB_ENV
        echo "CLANG_VER=$(clang --version | head -n 1 | perl -pe 's/\(http.*?\)//gs' | sed -e 's/  */ /g')" >> $GITHUB_ENV
        export ARCH=arm64
        export ODM_WT_EDIT=yes
        export VENDOR_EDIT=1
        export KBUILD_COMPILER_STRING="$(clang --version | head -n 1 | perl -pe 's/\(http.*?\)//gs' | sed -e 's/  */ /g' -e 's/[[:space:]]*$//')"
        export LD_PLUGIN_PATH=$GITHUB_WORKSPACE/project/clang/lib64:$LD_PLUGIN_PATH:
        export LD_LIBRARY_PATH=$GITHUB_WORKSPACE/project/clang/lib64:$LD_LIBRARY_PATH:
        make O=out ARCH=$ARCH ${{ github.event.inputs.KERNEL_DEFCONFIG }}
        make -j$(nproc --all) O=out ARCH=arm64 CROSS_COMPILE=aarch64-linux-android- CROSS_COMPILE_ARM32=arm-linux-androideabi- CLANG_TRIPLE=aarch64-linux-gnu- CC=clang HOSTCC=clang HOSTCXX=clang   -DCMAKE_C_COMPILER=clang \
        -DCMAKE_CXX_COMPILER=clang++ \
        -DCMAKE_C_COMPILER_LAUNCHER=ccache \
        -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
        -DCMAKE_CXX_COMPILER=clang++ 
        cp out/arch/arm64/boot/Image.gz-dtb $GITHUB_WORKSPACE/project/Image.gz-dtb-ksu

    - name: Prepare AK3
      run: |
        cd $GITHUB_WORKSPACE/project/AnyKernel3
      
        cp $GITHUB_WORKSPACE/project/Image.gz-dtb-ksu Image.gz-dtb
        zip -r9 $GITHUB_WORKSPACE/project/kernel-realme-4.9.zip -- *
        
    - name: Upload Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
        
          ${{ github.workspace }}/project/kernel-realme-4.9.zip
        name: Kernel 4.9.190-${{ env.BUILD_DATE }}
        tag_name: ${{ env.BUILD_DATE }}
        body: |
          Repo: ${{ github.event.inputs.KERNEL_REPO }}
          Branch: ${{ github.event.inputs.KERNEL_BRANCH }}
          Config: ${{ github.event.inputs.KERNEL_DEFCONFIG }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
