
name: Kernel Build realme c12 4.9
on:
  workflow_dispatch:
    inputs:
      KERNEL_REPO:
        description: 'KERNEL_REPO'
        required: true
        default: 'https://github.com/NCLnclNCL/realmeC11_realmeC12_realmeC15_AndroidQ-kernel-source'
      KERNEL_BRANCH:
        description: 'KERNEL_BRANCH'
        required: true
        default: 'master'
      KERNEL_DEFCONFIG:
        description: 'KERNEL_DEFCONFIG'
        required: true
        default: 'oppo6765_defconfig'
      KERNEL_HOTFIX:
        description: 'KERNEL_HOTFIX'
        required: false
        default: 'N/A'

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:

    - name: Prepare Env
      run: |
        sudo apt update
        sudo apt -y install build-essential bc bison flex libssl-dev libncurses-dev libelf-dev git curl unzip gcc g++ ccache make python3
        git config --global user.name "bot"
        git config --global user.email "bot@email.com"
        mkdir -p $GITHUB_WORKSPACE/project
    - name: Install python2
      run: |
        cd $GITHUB_WORKSPACE/project
        wget https://github.com/NCLnclNCL/kernel-build/releases/download/python2.7.18/python2.7.18.zip
        ls
        7z x python2.7.18.zip   
        cd python2
        ls
        sudo update-alternatives --install /usr/bin/python python $GITHUB_WORKSPACE/project/python2/bin/python2.7 1
        sudo ln -s "$GITHUB_WORKSPACE/project/python2/bin/python2.7" "/usr/bin/python2"
    - name: Prepare TC
      run: |
        mkdir -p $GITHUB_WORKSPACE/project/clang
        CLANG_URL=https://github.com/ZyCromerZ/Clang/releases/download/10.0.1-20220724-release/Clang-10.0.1-20220724.tar.gz
        aria2c $CLANG_URL &> /dev/null
        tar -C $GITHUB_WORKSPACE/project/clang/ -zxf ${CLANG_URL##*/}

    - name: Prepare Kernel
      run: |
        cd $GITHUB_WORKSPACE/project
        git clone -b ${{ github.event.inputs.KERNEL_BRANCH }} ${{ github.event.inputs.KERNEL_REPO }} linux --recurse-submodules --depth=1 &> /dev/null
        git clone -b master https://github.com/NCLnclNCL/AnyKernel3 AnyKernel3 --depth=1 &> /dev/null

    - name: Building Kernel
      run: |
        cd $GITHUB_WORKSPACE/project/linux
        export PATH=$GITHUB_WORKSPACE/project/clang/bin:$PATH
        echo "BUILD_DATE=$(date "+%Y%m%d%H%M")" >> $GITHUB_ENV
        echo "CLANG_VER=$(clang --version | head -n 1 | perl -pe 's/\(http.*?\)//gs' | sed -e 's/  */ /g')" >> $GITHUB_ENV
        export ARCH=arm64
        export ODM_WT_EDIT=yes
        export VENDOR_EDIT=1
        export KBUILD_COMPILER_STRING="$(clang --version | head -n 1 | perl -pe 's/\(http.*?\)//gs' | sed -e 's/  */ /g' -e 's/[[:space:]]*$//')"
        make clean
        make O=out ARCH=$ARCH ${{ github.event.inputs.KERNEL_DEFCONFIG }}
        make -j$(nproc --all) O=out ARCH=arm64 CROSS_COMPILE=aarch64-linux-android- CROSS_COMPILE_ARM32=arm-linux-androideabi- CLANG_TRIPLE=aarch64-linux-gnu- LD=ld.lld CC=clang AR=llvm-ar NM=llvm-nm OBJCOPY=llvm-objcopy OBJDUMP=llvm-objdump STRIP=llvm-strip HOSTCC=clang HOSTCXX=clang++ HOSTAR=llvm-ar HOSTLD=ld.lld LLVM=1 LLVM_IAS=0
        cp out/arch/arm64/boot/Image.gz-dtb $GITHUB_WORKSPACE/project/Image.gz-dtb-ksu

    - name: Prepare AK3
      run: |
        cd $GITHUB_WORKSPACE/project/AnyKernel3
      
        cp $GITHUB_WORKSPACE/project/Image.gz-dtb-ksu Image.gz-dtb
        zip -r9 $GITHUB_WORKSPACE/project/kernel.zip -- *
        
    - name: Upload Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
        
          ${{ github.workspace }}/project/kernel.zip
        name: OverHeat-${{ env.BUILD_DATE }}
        tag_name: ${{ env.BUILD_DATE }}
        body: |
          Repo: ${{ github.event.inputs.KERNEL_REPO }}
          Branch: ${{ github.event.inputs.KERNEL_BRANCH }}
          Config: ${{ github.event.inputs.KERNEL_DEFCONFIG }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
